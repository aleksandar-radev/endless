.stats-container,
.attributes-container {
  padding: 10px;
  border: 1px solid #fff;
  background-color: #222;
  border-radius: 5px;
}

.attributes-container {
  display: grid;
  grid-gap: 5px;
}

.attributes-container>h3 {
  grid-column: 1 / -1;
  /* Spans the title across both columns */
}

.stats-container {
  margin-bottom: 1em;
  min-height: 300px;
  /* reserve enough space to keep height stable when switching tabs */
}

.stats-container h3,
.attributes-container h3 {
  margin-bottom: 10px;
  font-size: 1.2em;
  color: #fff;
}

.attributes-container {
  background-color: #222;
}

.attributes-container .allocate-btn {
  padding: 5px 10px;
  font-size: 14px;
  background-color: #059669;
  color: #fff;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  margin-left: 5px;
  transition: all 0.3s ease;
}

.attributes-container .allocate-btn:hover {
  background-color: #047857;
  transform: scale(1.1);
}

.attributes-container .allocate-btn:disabled {
  background-color: #4b5563;
  cursor: not-allowed;
}

.attributes-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 10px;
  flex-basis: 100%;
}

.attributes-body {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 10px;
}

/* Allocation mode toolbar styling */
.attributes-container .allocate-modes {
  grid-column: 1 / -1;
  display: flex;
  gap: 5px;
  margin-bottom: 10px;
}

.attributes-container .mode-btn {
  padding: 5px 10px;
  font-size: 14px;
  background-color: #4b5563;
  color: #fff;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  transition: background-color 0.2s ease;
}

.attributes-container .mode-btn:hover {
  background-color: #6b7280;
}

.attributes-container .mode-btn.active {
  background-color: #059669;
}

/* Tab panels: hide all by default, show only when active */
.stats-panel {
  display: none;
}

.stats-panel.active {
  display: grid;
}

.stats-panel.active.default {
  grid-template-columns: max-content 1fr;
  gap: 3px 12px;
}

/* Tab button styling */
.stats-tabs {
  display: flex;
  gap: 5px;
  margin-bottom: 10px;
}

.split-view-btn {
  padding: 5px 10px;
  background-color: #4b5563;
  color: #fff;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  transition: background-color 0.2s;
}

.split-view-btn:hover {
  background-color: #6b7280;
}

.subtab-btn {
  padding: 5px 10px;
  background-color: #4b5563;
  color: #fff;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  transition: background-color 0.2s;
}

.subtab-btn.active {
  background-color: #059669;
}

.subtab-btn:hover {
  background-color: #6b7280;
}

.split-view-btn {
  margin-left: auto;
}

.split-view-modal #split-view-btn {
  display: none;
}

.split-view-modal .modal-content {
  width: 90%;
  max-width: 1200px;
  display: flex;
  gap: 10px;
}

.split-view-modal .split-left,
.split-view-modal .split-right {
  flex: 1;
  max-height: 80vh;
  overflow-y: hidden;
}

.split-view-modal .split-right-tabs {
  display: flex;
  flex-wrap: wrap;
  gap: 5px;
  margin-bottom: 10px;
}

/* Elemental stats grid: 2 columns, 2 rows */
.elemental-stats-grid {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 8px;
  margin-top: 8px;
}

.stat-row {
  /* Let the label/value children participate in the parent grid so
     the parent (.stat-subpanel) can size the left column based on the
     widest label across all rows. display:contents flattens the
     element's children into the parent for layout purposes. */
  display: contents;
}

/* Keep label from wrapping so width calculation is stable */
.stat-row .stat-label {
  white-space: nowrap;
  font-weight: bold;
  grid-column: 1;
  position: relative;
  padding-right: 6px;
  line-height: 20px;
}

.stat-row .stat-label::after {
  content: "";
  position: absolute;
  left: 0;
  bottom: 0;
  height: 1px;
  /* extend the underline beyond the label; adjust --label-underline-extend as needed */
  width: calc(100% + var(--label-underline-extend, 120px));
  background-color: #666565;
  pointer-events: none;
}

/* For rows with multiple value spans, group them into a container that sits in column 2 */
.stat-row .stat-values {
  display: flex;
  gap: 6px;
  align-items: center;
  justify-self: start;
  /* keep values left-aligned inside their column */
  grid-column: 2;
  /* ensures the values live in the second column */
}

/* Subcategory tabs inside each stats panel */
.subcat-tabs {
  display: flex;
  gap: 5px;
  margin-bottom: 10px;
}

.subcat-btn {
  padding: 5px 10px;
  background-color: #4b5563;
  color: #fff;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  transition: background-color 0.2s;
}

.subcat-btn.active {
  background-color: #059669;
}

.subcat-btn:hover {
  background-color: #6b7280;
}

.stat-subpanel {
  display: none;
}

.stat-subpanel.active {
  /* When the subpanel is active, create a two-column grid where the
     left column sizes to the widest label (max-content) and the right
     column takes the remaining space so all values align in one column. */
  display: grid;
  grid-template-columns: max-content 1fr;
  gap: 3px 12px;
  align-items: center;
}

/* Handle rows that use a single value element (no .stat-values wrapper)
   by placing any child that's not .stat-label into column 2. */
.stat-subpanel .stat-row> :not(.stat-label) {
  grid-column: 2;
  justify-self: start;
}